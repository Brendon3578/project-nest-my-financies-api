// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// Generate Entity Relationship Diagram, docs: https://github.com/notiz-dev/prisma-dbml-generator
generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider = "sqlite"
  url      = "file:./database.db"
}

model User {
  id        String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name      String
  email     String  @unique
  password  String
  image_url String?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  UsersOnOrganizations UsersOnOrganizations[]
  Entries              Entry[]
}

model Organization {
  id          String  @id @default(uuid())
  title       String
  description String?
  admin_id    String

  created_at DateTime @default(now())

  Categories           Category[]
  Entries              Entry[]
  UsersOnOrganizations UsersOnOrganizations[]
}

model UsersOnOrganizations {
  user_id         String
  organization_id String
  joined_in       DateTime @default(now())

  User         User         @relation(fields: [user_id], references: [id])
  Organization Organization @relation(fields: [organization_id], references: [id])

  @@id([user_id, organization_id])
}

model Category {
  id              Int     @id @default(autoincrement())
  name            String
  description     String?
  organization_id String

  Organization Organization @relation(fields: [organization_id], references: [id])
  Entries      Entry[]
}

model Entry {
  id              Int      @id @default(autoincrement())
  name            String
  description     String?
  paid            Boolean  @default(false)
  date            DateTime @default(now())
  value           Decimal
  type            String
  category_id     Int
  organization_id String
  author_id       String

  Creator      User         @relation(fields: [author_id], references: [id])
  Category     Category     @relation(fields: [category_id], references: [id])
  Organization Organization @relation(fields: [organization_id], references: [id])
}
